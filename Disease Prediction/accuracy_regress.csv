Dataset,Model,Training MSE,Testing MSE,Training MAE,Testing MAE,Training R²,Testing R²,Best estimator,Best parameters
HeartRate,Linear Regression,0.44730176581803127,0.41200425736371515,0.4100009787948118,0.39118898124312296,0.0028043262151210557,-0.0002218150421868792,LinearRegression(),{}
HeartRate,Ridge Regression,0.44730183391730255,0.4119963132943217,0.4098945435534334,0.3910829227991123,0.0028041743974804856,-0.00020252924267016859,Ridge(alpha=10.0),{'alpha': 10.0}
HeartRate,Lasso Regression,0.44855967346938763,0.41194775510204074,0.3952117551020409,0.3754499047619048,0.0,-8.46446277653623e-05,Lasso(alpha=0.1),{'alpha': 0.1}
HeartRate,Decision Tree Regression,0.3378084461885169,0.5306841616194946,0.41281273767148774,0.5318733629945241,0.24690411071567064,-0.288340753432077,"DecisionTreeRegressor(max_depth=10, min_samples_split=10)","{'max_depth': 10, 'min_samples_split': 10}"
HeartRate,Random Forest Regression,0.2879347114739906,0.4249354600972268,0.3508799535133079,0.42894499470345493,0.3580905094589584,-0.031614867025563376,"RandomForestRegressor(max_depth=10, min_samples_split=10, n_estimators=300)","{'max_depth': 10, 'min_samples_split': 10, 'n_estimators': 300}"
HeartRate,Gradient Boosting Regression,0.4429135337736573,0.41180478875093474,0.4020884109281143,0.3853330342057011,0.012587265484790944,0.0002624344633783693,GradientBoostingRegressor(learning_rate=0.01),"{'learning_rate': 0.01, 'n_estimators': 100}"
HeartRate,SVR,0.4390173066584265,0.41398842172945327,0.4165128014352654,0.4035500737370106,0.021273349735511538,-0.005038766439581233,SVR(),"{'C': 1.0, 'epsilon': 0.1}"
HeartRate,k-NN Regression,0.3889620991253644,0.4981768707482993,0.4522857142857143,0.5133333333333333,0.1328643163195331,-0.20942287601658305,KNeighborsRegressor(n_neighbors=7),"{'n_neighbors': 7, 'weights': 'uniform'}"
Insulin,Linear Regression,0.44608468793622313,0.47961021559962796,0.4119507541860593,0.4427081271201329,0.0035262606790391615,0.0007528361873639922,LinearRegression(),{}
Insulin,Ridge Regression,0.4460847744901588,0.4796002061848124,0.4118294045421516,0.4425853348688506,0.003526067332963234,0.0007736903706998532,Ridge(alpha=10.0),{'alpha': 10.0}
Insulin,Lasso Regression,0.44766326530612244,0.4799748299319727,0.39784489795918365,0.42819999999999997,0.0,-6.822021803687406e-06,Lasso(alpha=0.1),{'alpha': 0.1}
Insulin,Decision Tree Regression,0.34941956037952826,0.5712294934162264,0.4174928542617007,0.5550748155292561,0.21945893831474617,-0.19013197095615797,"DecisionTreeRegressor(max_depth=10, min_samples_split=10)","{'max_depth': 10, 'min_samples_split': 10}"
Insulin,Random Forest Regression,0.2933629422141612,0.48733299995547585,0.35170336504505895,0.4675229745497402,0.34467943887789654,-0.015337251373989336,"RandomForestRegressor(max_depth=10, min_samples_split=10, n_estimators=200)","{'max_depth': 10, 'min_samples_split': 10, 'n_estimators': 200}"
Insulin,Gradient Boosting Regression,0.4425255821241495,0.4787929420417045,0.40089734299997626,0.4333498018144049,0.011476669139826923,0.002455590336987612,GradientBoostingRegressor(learning_rate=0.01),"{'learning_rate': 0.01, 'n_estimators': 100}"
Insulin,SVR,0.44388642464131095,0.4801126594963617,0.41406307206696363,0.44526381727631165,0.008436789340373396,-0.0002939839646181053,SVR(C=0.1),"{'C': 0.1, 'epsilon': 0.1}"
Insulin,k-NN Regression,0.38389504373177846,0.5455238095238095,0.4479183673469388,0.5382857142857143,0.14244684904118232,-0.1365752891176617,KNeighborsRegressor(n_neighbors=7),"{'n_neighbors': 7, 'weights': 'uniform'}"
Glucose,Linear Regression,0.4869315729136202,0.46608435917553365,0.4146560815999906,0.40960179097383687,0.0035602128834727464,-0.001135855030979016,LinearRegression(),{}
Glucose,Ridge Regression,0.4869316603449143,0.4660770067884432,0.414538876485251,0.409481797648728,0.0035600339671220116,-0.0011200623140783517,Ridge(alpha=10.0),{'alpha': 10.0}
Glucose,Lasso Regression,0.48867134693877556,0.4656905578231293,0.4048169795918367,0.3985935238095238,0.0,-0.0002899810043348605,Lasso(alpha=0.1),{'alpha': 0.1}
Glucose,Decision Tree Regression,0.3394817330026308,0.6459931092502517,0.40520625321874904,0.5616693377434936,0.3052964223720618,-0.38757469767357144,"DecisionTreeRegressor(max_depth=10, min_samples_split=10)","{'max_depth': 10, 'min_samples_split': 10}"
Glucose,Random Forest Regression,0.3205443515150464,0.4742763009611363,0.3561609315496471,0.4356436482415019,0.34404921933103105,-0.01873191137236896,"RandomForestRegressor(max_depth=10, min_samples_split=10, n_estimators=200)","{'max_depth': 10, 'min_samples_split': 10, 'n_estimators': 200}"
Glucose,Gradient Boosting Regression,0.48203578633262495,0.4666924843355115,0.4066930468741938,0.40387439598987385,0.013578779782605133,-0.0024420904581390346,GradientBoostingRegressor(learning_rate=0.01),"{'learning_rate': 0.01, 'n_estimators': 100}"
Glucose,SVR,0.47673411877401056,0.4656821461752447,0.41755950437177686,0.4181665368302237,0.024427927357608237,-0.0002719130255850466,SVR(),"{'C': 1.0, 'epsilon': 0.1}"
Glucose,k-NN Regression,0.4231953352769679,0.531469387755102,0.45795918367346944,0.512095238095238,0.13398782652589403,-0.14158102381764137,KNeighborsRegressor(n_neighbors=7),"{'n_neighbors': 7, 'weights': 'uniform'}"
Cholesterol,Linear Regression,0.405234976916249,0.42150399781997405,0.42281146692952076,0.4370409990126466,0.003094770976981853,-0.006483240131534451,LinearRegression(),{}
Cholesterol,Ridge Regression,0.4052350168797426,0.42149300102640536,0.4227526735589106,0.4369788629767934,0.003094672664106568,-0.006456981570573284,Ridge(alpha=10.0),{'alpha': 10.0}
Cholesterol,Lasso Regression,0.4064929795918367,0.4198251156462585,0.41174906122448984,0.4246830476190476,0.0,-0.002474341571284011,Lasso(alpha=0.1),{'alpha': 0.1}
Cholesterol,Decision Tree Regression,0.3038852715983502,0.5322712302095008,0.4150296623925106,0.5624121792612538,0.25242184525921163,-0.2709774407379766,"DecisionTreeRegressor(max_depth=10, min_samples_split=10)","{'max_depth': 10, 'min_samples_split': 10}"
Cholesterol,Random Forest Regression,0.2724261335825776,0.4289104193048287,0.36420682566196727,0.46186997274192465,0.32981343526246587,-0.024168574392682052,"RandomForestRegressor(max_depth=10, min_samples_split=10, n_estimators=200)","{'max_depth': 10, 'min_samples_split': 10, 'n_estimators': 200}"
Cholesterol,Gradient Boosting Regression,0.40169401921724024,0.4206746135179603,0.41667264767389933,0.4330845159114433,0.011805764467113677,-0.004502804823868445,GradientBoostingRegressor(learning_rate=0.01),"{'learning_rate': 0.01, 'n_estimators': 100}"
Cholesterol,SVR,0.3944439468265998,0.4245482563109223,0.42552934273224563,0.446940893929156,0.029641428930298974,-0.013752436071821084,SVR(),"{'C': 1.0, 'epsilon': 0.1}"
Cholesterol,k-NN Regression,0.3390087463556852,0.48590476190476184,0.4448979591836735,0.5361904761904761,0.1660157410440718,-0.16026182832582214,KNeighborsRegressor(n_neighbors=7),"{'n_neighbors': 7, 'weights': 'uniform'}"
BloodPressure,Linear Regression,0.4164329947187735,0.42143249562974416,0.43691041761854715,0.4394843129394265,0.0042303174356124185,-0.00662337700738469,LinearRegression(),{}
BloodPressure,Ridge Regression,0.41643312241332386,0.4213938523949087,0.43676596470562434,0.43932134293230923,0.0042300120939043895,-0.006531074719469343,Ridge(alpha=10.0),{'alpha': 10.0}
BloodPressure,Lasso Regression,0.41820212244897953,0.4187014965986395,0.4235206530612245,0.42395733333333335,0.0,-0.00010017935223838315,Lasso(alpha=0.1),{'alpha': 0.1}
BloodPressure,Decision Tree Regression,0.2880867503496165,0.5722202462070838,0.4002045619913162,0.5839400789286782,0.311130348496108,-0.36679131913699003,"DecisionTreeRegressor(max_depth=10, min_samples_split=10)","{'max_depth': 10, 'min_samples_split': 10}"
BloodPressure,Random Forest Regression,0.2486237503828742,0.42492003064189826,0.34934182049146717,0.4598286473910709,0.40549381020129527,-0.014953618049001971,"RandomForestRegressor(max_depth=10, min_samples_split=5, n_estimators=300)","{'max_depth': 10, 'min_samples_split': 5, 'n_estimators': 300}"
BloodPressure,Gradient Boosting Regression,0.41205483046251923,0.41884661319047967,0.4284242979504809,0.4323346853871632,0.014699332347865579,-0.00044680130297258813,GradientBoostingRegressor(learning_rate=0.01),"{'learning_rate': 0.01, 'n_estimators': 100}"
BloodPressure,SVR,0.40396789201696576,0.4232493753325834,0.43564479945772355,0.4458358130701513,0.034036724511723015,-0.010963131537597759,SVR(),"{'C': 1.0, 'epsilon': 0.1}"
BloodPressure,k-NN Regression,0.3582798833819242,0.47612244897959183,0.4623265306122449,0.5296190476190477,0.14328535378097185,-0.1372544652606431,KNeighborsRegressor(n_neighbors=7),"{'n_neighbors': 7, 'weights': 'uniform'}"
BMI,Linear Regression,0.4172570042196765,0.40168533235943654,0.4341524282497464,0.4182379077055331,0.0030840740334195926,0.00038379296907609106,LinearRegression(),{}
BMI,Ridge Regression,0.4172570398130237,0.4016814313269223,0.4340821980059235,0.418167393883689,0.003083988993325959,0.0003935009046447391,Ridge(alpha=10.0),{'alpha': 10.0}
BMI,Lasso Regression,0.4185478367346939,0.4021466394557824,0.42137191836734683,0.4049660952380952,0.0,-0.0007641953012873515,Lasso(alpha=0.1),{'alpha': 0.1}
BMI,Decision Tree Regression,0.3270833118245825,0.4969625772293084,0.4327435817786071,0.5370323885872368,0.2185282466722872,-0.2367189102183891,"DecisionTreeRegressor(max_depth=10, min_samples_split=10)","{'max_depth': 10, 'min_samples_split': 10}"
BMI,Random Forest Regression,0.25435407464270443,0.4061145297339843,0.35420171666081296,0.4450335488383633,0.39229389733070685,-0.010638510120086542,"RandomForestRegressor(max_depth=10, min_samples_split=5, n_estimators=300)","{'max_depth': 10, 'min_samples_split': 5, 'n_estimators': 300}"
BMI,Gradient Boosting Regression,0.41298140122008303,0.40115857678722733,0.4261259866792509,0.41263500837546097,0.013299400990905763,0.0016946533981370138,GradientBoostingRegressor(learning_rate=0.01),"{'learning_rate': 0.01, 'n_estimators': 100}"
BMI,SVR,0.40565784598086113,0.4012364834852069,0.43695734329410213,0.429461366410778,0.030796935553159765,0.0015007782633911226,SVR(),"{'C': 1.0, 'epsilon': 0.1}"
BMI,k-NN Regression,0.3574344023323615,0.4467210884353741,0.46163265306122453,0.5085714285714286,0.1460130217829092,-0.11169018146500931,KNeighborsRegressor(n_neighbors=7),"{'n_neighbors': 7, 'weights': 'uniform'}"
Age,Linear Regression,0.4203892879248632,0.40671706577144007,0.44168571868270595,0.42603653601149444,0.005131476893658116,-0.009600940396508717,LinearRegression(),{}
Age,Ridge Regression,0.4203893677178377,0.4066964305559702,0.4415946119211894,0.4259335527993832,0.005131288060305383,-0.009549717237470334,Ridge(alpha=10.0),{'alpha': 10.0}
Age,Lasso Regression,0.42255763265306123,0.40318370068027215,0.4247023673469387,0.4054678095238095,0.0,-0.0008300059582375674,Lasso(alpha=0.1),{'alpha': 0.1}
Age,Decision Tree Regression,0.3032994550784623,0.541221922243902,0.41677761429096777,0.5709211351248749,0.2822293773888952,-0.34348471614839093,"DecisionTreeRegressor(max_depth=10, min_samples_split=10)","{'max_depth': 10, 'min_samples_split': 10}"
Age,Random Forest Regression,0.27068072079197,0.41864535972661093,0.3704579607950469,0.4547613543745906,0.35942295233793364,-0.039210754707163176,"RandomForestRegressor(max_depth=10, min_samples_split=10, n_estimators=200)","{'max_depth': 10, 'min_samples_split': 10, 'n_estimators': 200}"
Age,Gradient Boosting Regression,0.41619836810894867,0.4048952101292456,0.43378326253098715,0.4197945912434631,0.015049460837295636,-0.005078516027279489,GradientBoostingRegressor(learning_rate=0.01),"{'learning_rate': 0.01, 'n_estimators': 100}"
Age,SVR,0.41762884877734524,0.40792334339739605,0.44734970669344865,0.43424026193760573,0.011664169559002624,-0.012595304607005975,SVR(C=0.1),"{'C': 0.1, 'epsilon': 0.1}"
Age,k-NN Regression,0.35409912536443144,0.47410884353741495,0.46163265306122453,0.5240952380952381,0.1620098703668129,-0.17688873806604666,KNeighborsRegressor(n_neighbors=7),"{'n_neighbors': 7, 'weights': 'uniform'}"
